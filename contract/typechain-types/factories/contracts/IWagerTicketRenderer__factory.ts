/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IWagerTicketRenderer,
  IWagerTicketRendererInterface,
} from "../../contracts/IWagerTicketRenderer";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "endsAt",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "proposition",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "winningOutcome",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
          {
            internalType: "enum States",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "erc20Token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "userPosition",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "outcome",
            type: "bytes32",
          },
        ],
        internalType: "struct WagerPosition",
        name: "params",
        type: "tuple",
      },
    ],
    name: "buildSVGBase64",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class IWagerTicketRenderer__factory {
  static readonly abi = _abi;
  static createInterface(): IWagerTicketRendererInterface {
    return new utils.Interface(_abi) as IWagerTicketRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWagerTicketRenderer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IWagerTicketRenderer;
  }
}
